// Code generated by ent, DO NOT EDIT.

package logaudit

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/ogidi/church-media/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldID, id))
}

// Action applies equality check predicate on the "action" field. It's identical to ActionEQ.
func Action(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldAction, v))
}

// EntityType applies equality check predicate on the "entity_type" field. It's identical to EntityTypeEQ.
func EntityType(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldEntityType, v))
}

// EntityID applies equality check predicate on the "entity_id" field. It's identical to EntityIDEQ.
func EntityID(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldEntityID, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldCreatedAt, v))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldIPAddress, v))
}

// UserAgent applies equality check predicate on the "user_agent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldUserAgent, v))
}

// RequestID applies equality check predicate on the "request_id" field. It's identical to RequestIDEQ.
func RequestID(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldRequestID, v))
}

// ActionEQ applies the EQ predicate on the "action" field.
func ActionEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldAction, v))
}

// ActionNEQ applies the NEQ predicate on the "action" field.
func ActionNEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldAction, v))
}

// ActionIn applies the In predicate on the "action" field.
func ActionIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldAction, vs...))
}

// ActionNotIn applies the NotIn predicate on the "action" field.
func ActionNotIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldAction, vs...))
}

// ActionGT applies the GT predicate on the "action" field.
func ActionGT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldAction, v))
}

// ActionGTE applies the GTE predicate on the "action" field.
func ActionGTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldAction, v))
}

// ActionLT applies the LT predicate on the "action" field.
func ActionLT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldAction, v))
}

// ActionLTE applies the LTE predicate on the "action" field.
func ActionLTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldAction, v))
}

// ActionContains applies the Contains predicate on the "action" field.
func ActionContains(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContains(FieldAction, v))
}

// ActionHasPrefix applies the HasPrefix predicate on the "action" field.
func ActionHasPrefix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasPrefix(FieldAction, v))
}

// ActionHasSuffix applies the HasSuffix predicate on the "action" field.
func ActionHasSuffix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasSuffix(FieldAction, v))
}

// ActionEqualFold applies the EqualFold predicate on the "action" field.
func ActionEqualFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEqualFold(FieldAction, v))
}

// ActionContainsFold applies the ContainsFold predicate on the "action" field.
func ActionContainsFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContainsFold(FieldAction, v))
}

// EntityTypeEQ applies the EQ predicate on the "entity_type" field.
func EntityTypeEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldEntityType, v))
}

// EntityTypeNEQ applies the NEQ predicate on the "entity_type" field.
func EntityTypeNEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldEntityType, v))
}

// EntityTypeIn applies the In predicate on the "entity_type" field.
func EntityTypeIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldEntityType, vs...))
}

// EntityTypeNotIn applies the NotIn predicate on the "entity_type" field.
func EntityTypeNotIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldEntityType, vs...))
}

// EntityTypeGT applies the GT predicate on the "entity_type" field.
func EntityTypeGT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldEntityType, v))
}

// EntityTypeGTE applies the GTE predicate on the "entity_type" field.
func EntityTypeGTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldEntityType, v))
}

// EntityTypeLT applies the LT predicate on the "entity_type" field.
func EntityTypeLT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldEntityType, v))
}

// EntityTypeLTE applies the LTE predicate on the "entity_type" field.
func EntityTypeLTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldEntityType, v))
}

// EntityTypeContains applies the Contains predicate on the "entity_type" field.
func EntityTypeContains(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContains(FieldEntityType, v))
}

// EntityTypeHasPrefix applies the HasPrefix predicate on the "entity_type" field.
func EntityTypeHasPrefix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasPrefix(FieldEntityType, v))
}

// EntityTypeHasSuffix applies the HasSuffix predicate on the "entity_type" field.
func EntityTypeHasSuffix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasSuffix(FieldEntityType, v))
}

// EntityTypeEqualFold applies the EqualFold predicate on the "entity_type" field.
func EntityTypeEqualFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEqualFold(FieldEntityType, v))
}

// EntityTypeContainsFold applies the ContainsFold predicate on the "entity_type" field.
func EntityTypeContainsFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContainsFold(FieldEntityType, v))
}

// EntityIDEQ applies the EQ predicate on the "entity_id" field.
func EntityIDEQ(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldEntityID, v))
}

// EntityIDNEQ applies the NEQ predicate on the "entity_id" field.
func EntityIDNEQ(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldEntityID, v))
}

// EntityIDIn applies the In predicate on the "entity_id" field.
func EntityIDIn(vs ...int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldEntityID, vs...))
}

// EntityIDNotIn applies the NotIn predicate on the "entity_id" field.
func EntityIDNotIn(vs ...int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldEntityID, vs...))
}

// EntityIDGT applies the GT predicate on the "entity_id" field.
func EntityIDGT(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldEntityID, v))
}

// EntityIDGTE applies the GTE predicate on the "entity_id" field.
func EntityIDGTE(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldEntityID, v))
}

// EntityIDLT applies the LT predicate on the "entity_id" field.
func EntityIDLT(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldEntityID, v))
}

// EntityIDLTE applies the LTE predicate on the "entity_id" field.
func EntityIDLTE(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldEntityID, v))
}

// EntityDataIsNil applies the IsNil predicate on the "entity_data" field.
func EntityDataIsNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIsNull(FieldEntityData))
}

// EntityDataNotNil applies the NotNil predicate on the "entity_data" field.
func EntityDataNotNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotNull(FieldEntityData))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v int) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldCreatedAt, v))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContainsFold(FieldIPAddress, v))
}

// UserAgentEQ applies the EQ predicate on the "user_agent" field.
func UserAgentEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "user_agent" field.
func UserAgentNEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "user_agent" field.
func UserAgentIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "user_agent" field.
func UserAgentNotIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "user_agent" field.
func UserAgentGT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "user_agent" field.
func UserAgentGTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "user_agent" field.
func UserAgentLT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "user_agent" field.
func UserAgentLTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "user_agent" field.
func UserAgentContains(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "user_agent" field.
func UserAgentHasPrefix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "user_agent" field.
func UserAgentHasSuffix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentIsNil applies the IsNil predicate on the "user_agent" field.
func UserAgentIsNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIsNull(FieldUserAgent))
}

// UserAgentNotNil applies the NotNil predicate on the "user_agent" field.
func UserAgentNotNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotNull(FieldUserAgent))
}

// UserAgentEqualFold applies the EqualFold predicate on the "user_agent" field.
func UserAgentEqualFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "user_agent" field.
func UserAgentContainsFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContainsFold(FieldUserAgent, v))
}

// RequestIDEQ applies the EQ predicate on the "request_id" field.
func RequestIDEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEQ(FieldRequestID, v))
}

// RequestIDNEQ applies the NEQ predicate on the "request_id" field.
func RequestIDNEQ(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNEQ(FieldRequestID, v))
}

// RequestIDIn applies the In predicate on the "request_id" field.
func RequestIDIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIn(FieldRequestID, vs...))
}

// RequestIDNotIn applies the NotIn predicate on the "request_id" field.
func RequestIDNotIn(vs ...string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotIn(FieldRequestID, vs...))
}

// RequestIDGT applies the GT predicate on the "request_id" field.
func RequestIDGT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGT(FieldRequestID, v))
}

// RequestIDGTE applies the GTE predicate on the "request_id" field.
func RequestIDGTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldGTE(FieldRequestID, v))
}

// RequestIDLT applies the LT predicate on the "request_id" field.
func RequestIDLT(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLT(FieldRequestID, v))
}

// RequestIDLTE applies the LTE predicate on the "request_id" field.
func RequestIDLTE(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldLTE(FieldRequestID, v))
}

// RequestIDContains applies the Contains predicate on the "request_id" field.
func RequestIDContains(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContains(FieldRequestID, v))
}

// RequestIDHasPrefix applies the HasPrefix predicate on the "request_id" field.
func RequestIDHasPrefix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasPrefix(FieldRequestID, v))
}

// RequestIDHasSuffix applies the HasSuffix predicate on the "request_id" field.
func RequestIDHasSuffix(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldHasSuffix(FieldRequestID, v))
}

// RequestIDIsNil applies the IsNil predicate on the "request_id" field.
func RequestIDIsNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIsNull(FieldRequestID))
}

// RequestIDNotNil applies the NotNil predicate on the "request_id" field.
func RequestIDNotNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotNull(FieldRequestID))
}

// RequestIDEqualFold applies the EqualFold predicate on the "request_id" field.
func RequestIDEqualFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldEqualFold(FieldRequestID, v))
}

// RequestIDContainsFold applies the ContainsFold predicate on the "request_id" field.
func RequestIDContainsFold(v string) predicate.LogAudit {
	return predicate.LogAudit(sql.FieldContainsFold(FieldRequestID, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.LogAudit {
	return predicate.LogAudit(sql.FieldNotNull(FieldMetadata))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.LogAudit) predicate.LogAudit {
	return predicate.LogAudit(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.LogAudit) predicate.LogAudit {
	return predicate.LogAudit(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.LogAudit) predicate.LogAudit {
	return predicate.LogAudit(sql.NotPredicates(p))
}
