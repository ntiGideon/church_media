// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/ogidi/church-media/ent/member"
	"github.com/ogidi/church-media/ent/message"
	"github.com/ogidi/church-media/ent/response"
	"github.com/ogidi/church-media/ent/schema"
	"github.com/ogidi/church-media/ent/session"
	"github.com/ogidi/church-media/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	memberFields := schema.Member{}.Fields()
	_ = memberFields
	// memberDescSurname is the schema descriptor for surname field.
	memberDescSurname := memberFields[3].Descriptor()
	// member.SurnameValidator is a validator for the "surname" field. It is called by the builders before save.
	member.SurnameValidator = memberDescSurname.Validators[0].(func(string) error)
	// memberDescOtherNames is the schema descriptor for other_names field.
	memberDescOtherNames := memberFields[4].Descriptor()
	// member.OtherNamesValidator is a validator for the "other_names" field. It is called by the builders before save.
	member.OtherNamesValidator = memberDescOtherNames.Validators[0].(func(string) error)
	// memberDescAge is the schema descriptor for age field.
	memberDescAge := memberFields[6].Descriptor()
	// member.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	member.AgeValidator = memberDescAge.Validators[0].(func(int) error)
	// memberDescOccupation is the schema descriptor for occupation field.
	memberDescOccupation := memberFields[15].Descriptor()
	// member.OccupationValidator is a validator for the "occupation" field. It is called by the builders before save.
	member.OccupationValidator = memberDescOccupation.Validators[0].(func(string) error)
	// memberDescHasTitleCard is the schema descriptor for has_title_card field.
	memberDescHasTitleCard := memberFields[16].Descriptor()
	// member.DefaultHasTitleCard holds the default value on creation for the has_title_card field.
	member.DefaultHasTitleCard = memberDescHasTitleCard.Default.(bool)
	// memberDescHasSpouse is the schema descriptor for has_spouse field.
	memberDescHasSpouse := memberFields[19].Descriptor()
	// member.DefaultHasSpouse holds the default value on creation for the has_spouse field.
	member.DefaultHasSpouse = memberDescHasSpouse.Default.(bool)
	// memberDescIsBaptized is the schema descriptor for is_baptized field.
	memberDescIsBaptized := memberFields[24].Descriptor()
	// member.DefaultIsBaptized holds the default value on creation for the is_baptized field.
	member.DefaultIsBaptized = memberDescIsBaptized.Default.(bool)
	// memberDescMembershipYear is the schema descriptor for membership_year field.
	memberDescMembershipYear := memberFields[29].Descriptor()
	// member.MembershipYearValidator is a validator for the "membership_year" field. It is called by the builders before save.
	member.MembershipYearValidator = memberDescMembershipYear.Validators[0].(func(int) error)
	// memberDescIsActive is the schema descriptor for is_active field.
	memberDescIsActive := memberFields[33].Descriptor()
	// member.DefaultIsActive holds the default value on creation for the is_active field.
	member.DefaultIsActive = memberDescIsActive.Default.(bool)
	// memberDescCreatedAt is the schema descriptor for created_at field.
	memberDescCreatedAt := memberFields[34].Descriptor()
	// member.DefaultCreatedAt holds the default value on creation for the created_at field.
	member.DefaultCreatedAt = memberDescCreatedAt.Default.(func() time.Time)
	// memberDescUpdatedAt is the schema descriptor for updated_at field.
	memberDescUpdatedAt := memberFields[35].Descriptor()
	// member.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	member.DefaultUpdatedAt = memberDescUpdatedAt.Default.(func() time.Time)
	// member.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	member.UpdateDefaultUpdatedAt = memberDescUpdatedAt.UpdateDefault.(func() time.Time)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[7].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	responseFields := schema.Response{}.Fields()
	_ = responseFields
	// responseDescCreatedAt is the schema descriptor for created_at field.
	responseDescCreatedAt := responseFields[5].Descriptor()
	// response.DefaultCreatedAt holds the default value on creation for the created_at field.
	response.DefaultCreatedAt = responseDescCreatedAt.Default.(func() time.Time)
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescToken is the schema descriptor for token field.
	sessionDescToken := sessionFields[0].Descriptor()
	// session.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	session.TokenValidator = func() func(string) error {
		validators := sessionDescToken.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(token string) error {
			for _, fn := range fns {
				if err := fn(token); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sessionDescData is the schema descriptor for data field.
	sessionDescData := sessionFields[1].Descriptor()
	// session.DataValidator is a validator for the "data" field. It is called by the builders before save.
	session.DataValidator = sessionDescData.Validators[0].(func([]byte) error)
	// sessionDescExpiry is the schema descriptor for expiry field.
	sessionDescExpiry := sessionFields[2].Descriptor()
	// session.DefaultExpiry holds the default value on creation for the expiry field.
	session.DefaultExpiry = sessionDescExpiry.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[6].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
}
