// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AttendanceRecordsColumns holds the columns for the "attendance_records" table.
	AttendanceRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "males", Type: field.TypeInt},
		{Name: "females", Type: field.TypeInt},
		{Name: "offering", Type: field.TypeFloat64},
		{Name: "tithe", Type: field.TypeFloat64},
		{Name: "service_attendance_records", Type: field.TypeInt},
	}
	// AttendanceRecordsTable holds the schema information for the "attendance_records" table.
	AttendanceRecordsTable = &schema.Table{
		Name:       "attendance_records",
		Columns:    AttendanceRecordsColumns,
		PrimaryKey: []*schema.Column{AttendanceRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attendance_records_services_attendance_records",
				Columns:    []*schema.Column{AttendanceRecordsColumns[5]},
				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ContactProfilesColumns holds the columns for the "contact_profiles" table.
	ContactProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString, Size: 50},
		{Name: "surname", Type: field.TypeString, Size: 50},
		{Name: "phone_number", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "profile_picture", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "date_of_birth", Type: field.TypeTime, Nullable: true},
		{Name: "gender", Type: field.TypeEnum, Nullable: true, Enums: []string{"male", "female"}},
		{Name: "occupation", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "marital_status", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "user_contact_profile", Type: field.TypeInt, Unique: true},
	}
	// ContactProfilesTable holds the schema information for the "contact_profiles" table.
	ContactProfilesTable = &schema.Table{
		Name:       "contact_profiles",
		Columns:    ContactProfilesColumns,
		PrimaryKey: []*schema.Column{ContactProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contact_profiles_users_contact_profile",
				Columns:    []*schema.Column{ContactProfilesColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "location", Type: field.TypeString},
		{Name: "image_url", Type: field.TypeString, Nullable: true},
		{Name: "featured", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
	}
	// LogAuditsColumns holds the columns for the "log_audits" table.
	LogAuditsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "action", Type: field.TypeString},
		{Name: "entity_type", Type: field.TypeString},
		{Name: "entity_id", Type: field.TypeInt},
		{Name: "entity_data", Type: field.TypeJSON, Nullable: true},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "ip_address", Type: field.TypeString, Size: 45},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "request_id", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
	}
	// LogAuditsTable holds the schema information for the "log_audits" table.
	LogAuditsTable = &schema.Table{
		Name:       "log_audits",
		Columns:    LogAuditsColumns,
		PrimaryKey: []*schema.Column{LogAuditsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "logaudit_action",
				Unique:  false,
				Columns: []*schema.Column{LogAuditsColumns[1]},
			},
			{
				Name:    "logaudit_entity_type",
				Unique:  false,
				Columns: []*schema.Column{LogAuditsColumns[2]},
			},
			{
				Name:    "logaudit_entity_id",
				Unique:  false,
				Columns: []*schema.Column{LogAuditsColumns[3]},
			},
			{
				Name:    "logaudit_created_at",
				Unique:  false,
				Columns: []*schema.Column{LogAuditsColumns[6]},
			},
			{
				Name:    "logaudit_created_by",
				Unique:  false,
				Columns: []*schema.Column{LogAuditsColumns[5]},
			},
		},
	}
	// MembersColumns holds the columns for the "members" table.
	MembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "form_number", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "id_number", Type: field.TypeString, Unique: true},
		{Name: "surname", Type: field.TypeString},
		{Name: "other_names", Type: field.TypeString},
		{Name: "dob", Type: field.TypeTime},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"male", "female", "other"}},
		{Name: "hometown", Type: field.TypeString},
		{Name: "region", Type: field.TypeString},
		{Name: "residence", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString},
		{Name: "mobile", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "sunday_school_class", Type: field.TypeString, Nullable: true},
		{Name: "occupation", Type: field.TypeString},
		{Name: "has_title_card", Type: field.TypeBool, Default: false},
		{Name: "title_card_number", Type: field.TypeString, Nullable: true},
		{Name: "day_born", Type: field.TypeString, Nullable: true},
		{Name: "has_spouse", Type: field.TypeBool, Default: false},
		{Name: "spouse_id_number", Type: field.TypeString, Nullable: true},
		{Name: "spouse_name", Type: field.TypeString, Nullable: true},
		{Name: "spouse_occupation", Type: field.TypeString, Nullable: true},
		{Name: "spouse_contact", Type: field.TypeString, Nullable: true},
		{Name: "is_baptized", Type: field.TypeBool, Default: false},
		{Name: "baptized_by", Type: field.TypeString, Nullable: true},
		{Name: "baptism_church", Type: field.TypeString, Nullable: true},
		{Name: "baptism_cert_number", Type: field.TypeString, Nullable: true},
		{Name: "baptism_date", Type: field.TypeTime, Nullable: true},
		{Name: "membership_year", Type: field.TypeInt},
		{Name: "photo_url", Type: field.TypeString, Nullable: true},
		{Name: "photo_data", Type: field.TypeBytes, Nullable: true},
		{Name: "photo_hash", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// MembersTable holds the schema information for the "members" table.
	MembersTable = &schema.Table{
		Name:       "members",
		Columns:    MembersColumns,
		PrimaryKey: []*schema.Column{MembersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "member_id_number",
				Unique:  true,
				Columns: []*schema.Column{MembersColumns[2]},
			},
			{
				Name:    "member_surname",
				Unique:  false,
				Columns: []*schema.Column{MembersColumns[3]},
			},
			{
				Name:    "member_mobile",
				Unique:  false,
				Columns: []*schema.Column{MembersColumns[11]},
			},
			{
				Name:    "member_email",
				Unique:  true,
				Columns: []*schema.Column{MembersColumns[12]},
			},
			{
				Name:    "member_membership_year",
				Unique:  false,
				Columns: []*schema.Column{MembersColumns[28]},
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "subject", Type: field.TypeEnum, Enums: []string{"GENERAL_ENQUIRY", "PRAYER_REQUEST", "MINISTRY_QUESTION", "EVENT_INFORMATION", "OTHER"}, Default: "GENERAL_ENQUIRY", SchemaType: map[string]string{"postgres": "varchar"}},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"READ", "UNREAD", "RESPONDED"}},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
	}
	// ResponsesColumns holds the columns for the "responses" table.
	ResponsesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString},
		{Name: "subject", Type: field.TypeEnum, Enums: []string{"GENERAL_ENQUIRY", "PRAYER_REQUEST", "MINISTRY_QUESTION", "EVENT_INFORMATION", "OTHER"}, Default: "GENERAL_ENQUIRY", SchemaType: map[string]string{"postgres": "varchar"}},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ResponsesTable holds the schema information for the "responses" table.
	ResponsesTable = &schema.Table{
		Name:       "responses",
		Columns:    ResponsesColumns,
		PrimaryKey: []*schema.Column{ResponsesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "responses_messages_responses",
				Columns:    []*schema.Column{ResponsesColumns[5]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "responses_users_responses",
				Columns:    []*schema.Column{ResponsesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ServicesColumns holds the columns for the "services" table.
	ServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Default: "Sunday Service"},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"first_service", "second_service", "friday_service", "wednesday_service", "children_service"}},
	}
	// ServicesTable holds the schema information for the "services" table.
	ServicesTable = &schema.Table{
		Name:       "services",
		Columns:    ServicesColumns,
		PrimaryKey: []*schema.Column{ServicesColumns[0]},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token", Type: field.TypeString, Unique: true, Size: 43},
		{Name: "data", Type: field.TypeBytes},
		{Name: "expiry", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "TIMESTAMP(6)"}},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "session_expiry",
				Unique:  false,
				Columns: []*schema.Column{SessionsColumns[3]},
			},
		},
	}
	// SubscribesColumns holds the columns for the "subscribes" table.
	SubscribesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// SubscribesTable holds the schema information for the "subscribes" table.
	SubscribesTable = &schema.Table{
		Name:       "subscribes",
		Columns:    SubscribesColumns,
		PrimaryKey: []*schema.Column{SubscribesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Size: 20},
		{Name: "verify_token", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "registration_token", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "reset_token", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "department", Type: field.TypeString, Nullable: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"member", "deacon", "pastor", "admin", "content_admin", "secretary", "superadmin"}, Default: "member"},
		{Name: "token_expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"FRESH", "DELETED", "VERIFIED", "ACCEPTED", "PENDING", "EXPIRED"}, Default: "FRESH", SchemaType: map[string]string{"postgres": "varchar"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "join_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_login", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[3]},
			},
			{
				Name:    "user_email",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[5]},
			},
			{
				Name:    "user_registration_token",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[7]},
			},
			{
				Name:    "user_role",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[10]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AttendanceRecordsTable,
		ContactProfilesTable,
		EventsTable,
		LogAuditsTable,
		MembersTable,
		MessagesTable,
		ResponsesTable,
		ServicesTable,
		SessionsTable,
		SubscribesTable,
		UsersTable,
	}
)

func init() {
	AttendanceRecordsTable.ForeignKeys[0].RefTable = ServicesTable
	ContactProfilesTable.ForeignKeys[0].RefTable = UsersTable
	ResponsesTable.ForeignKeys[0].RefTable = MessagesTable
	ResponsesTable.ForeignKeys[1].RefTable = UsersTable
}
