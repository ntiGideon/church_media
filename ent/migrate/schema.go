// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MembersColumns holds the columns for the "members" table.
	MembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "form_number", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "id_number", Type: field.TypeString, Unique: true},
		{Name: "surname", Type: field.TypeString},
		{Name: "other_names", Type: field.TypeString},
		{Name: "dob", Type: field.TypeTime},
		{Name: "age", Type: field.TypeInt},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"male", "female", "other"}},
		{Name: "hometown", Type: field.TypeString},
		{Name: "region", Type: field.TypeString},
		{Name: "residence", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "mobile", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "sunday_school_class", Type: field.TypeString, Nullable: true},
		{Name: "occupation", Type: field.TypeString},
		{Name: "has_title_card", Type: field.TypeBool, Default: false},
		{Name: "title_card_number", Type: field.TypeString, Nullable: true},
		{Name: "day_born", Type: field.TypeString, Nullable: true},
		{Name: "has_spouse", Type: field.TypeBool, Default: false},
		{Name: "spouse_id_number", Type: field.TypeString, Nullable: true},
		{Name: "spouse_name", Type: field.TypeString, Nullable: true},
		{Name: "spouse_occupation", Type: field.TypeString, Nullable: true},
		{Name: "spouse_contact", Type: field.TypeString, Nullable: true},
		{Name: "is_baptized", Type: field.TypeBool, Default: false},
		{Name: "baptized_by", Type: field.TypeString, Nullable: true},
		{Name: "baptism_church", Type: field.TypeString, Nullable: true},
		{Name: "baptism_cert_number", Type: field.TypeString, Nullable: true},
		{Name: "baptism_date", Type: field.TypeTime, Nullable: true},
		{Name: "membership_year", Type: field.TypeInt},
		{Name: "photo_url", Type: field.TypeString, Nullable: true},
		{Name: "photo_data", Type: field.TypeBytes, Nullable: true},
		{Name: "photo_hash", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// MembersTable holds the schema information for the "members" table.
	MembersTable = &schema.Table{
		Name:       "members",
		Columns:    MembersColumns,
		PrimaryKey: []*schema.Column{MembersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "member_id_number",
				Unique:  true,
				Columns: []*schema.Column{MembersColumns[2]},
			},
			{
				Name:    "member_surname",
				Unique:  false,
				Columns: []*schema.Column{MembersColumns[3]},
			},
			{
				Name:    "member_mobile",
				Unique:  false,
				Columns: []*schema.Column{MembersColumns[12]},
			},
			{
				Name:    "member_email",
				Unique:  true,
				Columns: []*schema.Column{MembersColumns[13]},
			},
			{
				Name:    "member_membership_year",
				Unique:  false,
				Columns: []*schema.Column{MembersColumns[29]},
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "subject", Type: field.TypeEnum, Enums: []string{"GENERAL_ENQUIRY", "PRAYER_REQUEST", "MINISTRY_QUESTION", "EVENT_INFORMATION", "OTHER"}, Default: "GENERAL_ENQUIRY", SchemaType: map[string]string{"postgres": "varchar"}},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"READ", "UNREAD", "RESPONDED"}},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
	}
	// ResponsesColumns holds the columns for the "responses" table.
	ResponsesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString},
		{Name: "subject", Type: field.TypeEnum, Enums: []string{"GENERAL_ENQUIRY", "PRAYER_REQUEST", "MINISTRY_QUESTION", "EVENT_INFORMATION", "OTHER"}, Default: "GENERAL_ENQUIRY", SchemaType: map[string]string{"postgres": "varchar"}},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ResponsesTable holds the schema information for the "responses" table.
	ResponsesTable = &schema.Table{
		Name:       "responses",
		Columns:    ResponsesColumns,
		PrimaryKey: []*schema.Column{ResponsesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "responses_messages_responses",
				Columns:    []*schema.Column{ResponsesColumns[5]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "responses_users_responses",
				Columns:    []*schema.Column{ResponsesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token", Type: field.TypeString, Unique: true, Size: 43},
		{Name: "data", Type: field.TypeBytes},
		{Name: "expiry", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "TIMESTAMP(6)"}},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "session_expiry",
				Unique:  false,
				Columns: []*schema.Column{SessionsColumns[3]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"FRESH", "DELETED", "VERIFIED"}, Default: "FRESH", SchemaType: map[string]string{"postgres": "varchar"}},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MembersTable,
		MessagesTable,
		ResponsesTable,
		SessionsTable,
		UsersTable,
	}
)

func init() {
	ResponsesTable.ForeignKeys[0].RefTable = MessagesTable
	ResponsesTable.ForeignKeys[1].RefTable = UsersTable
}
